// these are labels for the days of the week cal_days_labels = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']; // these are human-readable month name labels, in order cal_months_labels = ['January', 'February', 'March', 'April',                      'May', 'June', 'July', 'August', 'September',                      'October', 'November', 'December']; // these are the days of the week for each month, in order cal_days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // this is the current date var cal_current_date = new Date(); function Calendar(month, year) {   this.month = (isNaN(month) || month == null) ? cal_current_date.getMonth() : month;   this.year  = (isNaN(year) || year == null) ? cal_current_date.getFullYear() : year; } Calendar.prototype.generateHTML = function(){   // get first day of month   var firstDay = new Date(this.year, this.month, 1);   var startingDay = firstDay.getDay();     // find number of days in month   var monthLength = cal_days_in_month[this.month];     // compensate for leap year   if (this.month == 1) { // February only!     if((this.year % 4 == 0 && this.year % 100 != 0) || this.year % 400 == 0){       monthLength = 29;     }   }   // get todays date   var cal_today_date = new Date();   checkDay = (cal_today_date.getMonth() == this.month && cal_today_date.getFullYear() == this.year) ? true : false;     // do the header   var monthName = cal_months_labels[this.month]   var html = '';   html += '';   html += '';   for(var i = 0; i <= 6; i++ ){     html += '';   }   html += '';   // fill in the days   var day = 1;   // this loop is for is weeks (rows)   for (var i = 0; i < 9; i++) {     // this loop is for weekdays (cells)     for (var j = 0; j <= 6; j++) {       html += '';     }     // stop making rows if we've run out of days     if (day > monthLength) {       break;     } else {       html += '';     }   }   html += '
«	';   html +=  monthName + " " + this.year;   html += '	»
';     html += cal_days_labels[i];     html += '
';       if (day <= monthLength && (i > 0 || j >= startingDay)) {         ts = this.generateTimestamp(day);         if (checkDay == true && day == cal_today_date.getDate())           html += '' + day + '';         else           html += '' + day + '';         day++;       }       html += '
';   document.getElementById('calendar-holder').innerHTML = html; } Calendar.prototype.generateTimestamp = function(day) {   month = this.month + 1;   return "'" + day + "','" + month + "','" + this.year + "'"; } Calendar.prototype.prevMonth = function() {   if (this.month == 0) {     this.month = 12;     this.year = (this.year - 1);   }   this.month = (this.month - 1);   this.generateHTML(); } Calendar.prototype.nextMonth = function() {   if (this.month == 11) {     this.month = -1;     this.year = (this.year + 1);   }   this.month = (this.month + 1);   this.generateHTML(); } - See more at: http://www.xeweb.net/2010/01/07/a-simple-and-lightweight-javascript-calendar/#sthash.ZKjkAohF.dpuf